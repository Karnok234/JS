//"use strict" - Строгий режим 

// console.log("Привет!") //Вывод в консоль
//--------------------------------------------------------------
// let message = "Пока" 
//Функция let, она меняется часто и если я напишу снизу под console.log     
// уже другое обозначение, будет другое
// let and const переменные  const нельзя переменить!

// console.log(message)
//--------------------------------------------------------------
// const age = "Бум"
// console.log(age)
//--------------------------------------------------------------

//alert("Привет!")
//--------------------------------------------------------------
// Цикл - For пишется +- так: for(let i = 0; i < 4; i++) 
// мы обозначиваем i как переменную потом проверяем i меньше
//  4 или нет и потом прибавляем 1
//for (let i = 0; i < 4; i++){
//    console.log(i)
//}
//--------------------------------------------------------------
//Это 9 и 8 видео 
//function ULO() {
  //  console.log("Привет пупсик")
//}

//Можно создать свою функцию и попросту легко вывести ее в консоль
//ULO()

//--------------------------------------------------------------

//const message1 = "Привет"

//function ULO() {
    //const message1 = "локальный привет"


    //console.log(message1)
//}

//ULO()
//console.log(message1)
//--------------------------------------

// function ABOBA(age) {
//     if (typeof age !== `number`) {
//         return `Возраст не указан корректно`
//     }

//     if (age < 0 || age > 125) {
//         return `Хватит врать! Такого возраста не может быть у тебя!`
//     }

//     if (age < 18) {
//         return `Думаешь самый взрослый тут?`
//     }

//     return `Ай слоняра!`
// }

// console.log(ABOBA(18) )

//----------------------------------------

//Это 10-11 
// in - проверка, есть ли функция такая

// Объекты:

// const user = {
//   password: 'qwerty',
//   login: 'Karnok',
// }

// console.log(user)
// console.log( 'aboba' in user) А есть ли вообще такая функция есть? false/true
//----------------------------------------------------------------------------------------
// const ob1 = {name: 'Пук'}
// const ob2 = ob1

// console.log(ob1 === ob2) выдат Тру, т.к ob2 ссылается на одно и то же место, значит они по сути одинаковые, а если бы он не ссылался
// ответ был бы разным
//----------------------------------------
//Объекты можно копировать полностью и делается  это очень легко:

const obj1 = {name: 'булька'}
const obj2 = {...obj1} //Копируем

console.log('obj1:', obj1)
console.log('obj2:', obj2)
//--------------------------------------------

//Объекты еще можно и объединять! 

const objj1 = {name: 'булька'}
const objj2 = {password: '123456789'}

const user = Object.assign({}, objj1, objj2) //объединяем, либо можно использовать способ: ...objj1, ...objj2, и т.д

console.log(user)
